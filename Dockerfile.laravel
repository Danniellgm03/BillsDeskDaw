FROM php:8.3-rc-apache-buster

# Establecer el directorio de trabajo
WORKDIR /var/www/html/backend/

# Permisos para la carpeta
RUN chmod 777 /var/www/html/backend/

# Actualizar repositorios y dependencias
RUN apt-get update -o Acquire::Check-Valid-Until=false \
    && apt-get install -y --reinstall debian-archive-keyring

RUN apt-get update && apt-get install --yes --force-yes \
    cron \
    g++ \
    gettext \
    libicu-dev \
    openssl \
    libc-client-dev \
    libkrb5-dev \
    libxml2-dev \
    libfreetype6-dev \
    libgd-dev \
    libmcrypt-dev \
    bzip2 \
    libbz2-dev \
    htop \
    libtidy-dev \
    libcurl4-openssl-dev \
    libz-dev \
    libmemcached-dev \
    libxslt-dev \
    zip \
    git \
    libpq-dev  # Dependencia necesaria para PostgreSQL

# Limpieza de paquetes
RUN rm -rf /var/lib/apt/lists/*

# Instalar la extensión de MongoDB
RUN pecl install mongodb \
    && echo "extension=mongodb.so" > /usr/local/etc/php/conf.d/mongodb.ini

# Instalar extensiones de PHP para PostgreSQL
RUN docker-php-ext-install pdo pdo_pgsql
RUN docker-php-ext-enable pdo pdo_pgsql

# Instalar Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Habilitar mod_rewrite en Apache
RUN a2enmod rewrite

# Configurar GD (gráficos)
RUN docker-php-ext-configure gd --with-freetype=/usr --with-jpeg=/usr
RUN docker-php-ext-install gd


# # Copia el código de la aplicación
# COPY ./billsdesk-laravel /var/www/html/backend/

# # Establecer los permisos adecuados
# RUN chown -R www-data:www-data /var/www/html/backend/

# RUN chmod -R 775 /var/www/html/backend/storage
# RUN chmod -R 775 /var/www/html/backend/bootstrap/cache
# RUN chown -R www-data:www-data /var/www/html/backend/storage
# RUN chown -R www-data:www-data /var/www/html/backend/bootstrap/cache


# Expón el puerto 8000
EXPOSE 8000

# Comando final para ejecutar el contenedor
CMD composer install && php artisan migrate --force && php artisan serve --host=0.0.0.0 --port=8000
